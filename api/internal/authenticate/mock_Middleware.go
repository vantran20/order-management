// Code generated by mockery v2.45.1. DO NOT EDIT.

package authenticate

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// MockMiddleware is an autogenerated mock type for the Middleware type
type MockMiddleware struct {
	mock.Mock
}

// Handler provides a mock function with given fields:
func (_m *MockMiddleware) Handler() gin.HandlerFunc {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Handler")
	}

	var r0 gin.HandlerFunc
	if rf, ok := ret.Get(0).(func() gin.HandlerFunc); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gin.HandlerFunc)
		}
	}

	return r0
}

// NewMockMiddleware creates a new instance of MockMiddleware. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMiddleware(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMiddleware {
	mock := &MockMiddleware{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
